# This file defines Continuous Integration (CI) tests for BRL-CAD using the
# Github Actions framework.  Currently it defines configurations for Windows,
# Linux and OSX.
#
# Initially we used examples to try and define one common configuration for all
# platforms, but that turned out to be more complex than it was worth.  The
# different platforms manifest different issues, and it is easier to keep the
# individual steps simple and address what needs addressing per-platform.
#
# For more information about available platforms for testing, see:
#
# https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners
#
# The general rule when building in CI is to go more verbose in output settings
# rather than less, since iterative debugging isn't practical.  We also want to
# avoid parallel building - while that will sometimes catch dependency issues,
# it also makes the outputs far harder to interpret when there is a problem.
# Better to do parallel build debugging in an environment were more interactive
# and iterative debugging is available while preserving the readability of the
# CI outputs for other issues.
#
# Note that there is another reason not to do parallel runs; we have had some
# trouble with issues that appear to be related to files not being fully
# written out to disk. To try and help mitigate this, we don't want to stress
# the I/O subsystem any more than necessary:
#
# https://github.com/actions/runner/issues/718
#

name: BRL-CAD Interactive Debugging

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false


jobs:

  linux:
    name: Ubuntu Latest GCC
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Setup - CMake
        uses: lukka/get-cmake@latest

      - name: Setup - System
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          # Install X/OpenGL dev pkgs
          sudo apt-get install xserver-xorg-dev libx11-dev libxi-dev libxext-dev libglu1-mesa-dev libfontconfig-dev
          # Install tools
          sudo apt-get install astyle re2c xsltproc libxml2-utils liblief-dev
          # Install dependency dev pkgs
          sudo apt-get install zlib1g-dev libpng-dev libjpeg-dev libtiff-dev libeigen3-dev libgdal-dev libassimp-dev libopencv-dev tcl-dev tk-dev
          # Cleanup (we want to avoid wasting disk space)
          sudo apt-get clean

      - name: Setup - System Qt Build Requirements
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          # Install XCB/OpenGL dev pkgs for Qt - see:
          # https://wiki.qt.io/Building_Qt_6_from_Git
          # https://doc.qt.io/qt-6/linux-requirements.html
          sudo apt-get install libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libxcb-cursor-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-util-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev
          sudo apt-get install libgl-dev
          sudo apt-get install libinput-dev
          sudo apt-get clean

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Directory setup
        run: |
          cmake -E make_directory ./build_linux

      - name: Configure
        run: |
          export PATH=$ENV{GITHUB_WORKSPACE}:$PATH
          cmake -S . -G Ninja -B build_linux -DBRLCAD_EXT_PARALLEL=1 -DBRLCAD_COMPONENTS=libged

      - name: Build
        run: |
          export PATH=$ENV{GITHUB_WORKSPACE}:$PATH
          cmake --build build_linux --config Release --target check

      - name: Debugging - tmate session
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
